{"ast":null,"code":"var _jsxFileName = \"/Users/stevenjohnson/crypto-react/src/CryptoCalcu.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoCalc = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"type amount\",\n          className: \"input input-bordered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 1\n  }, this);\n};\n\n_c = CryptoCalc;\nexport default CryptoCalc;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoCalc\");","map":{"version":3,"names":["React","CryptoCalc"],"sources":["/Users/stevenjohnson/crypto-react/src/CryptoCalcu.js"],"sourcesContent":["import React from 'react';\n\nconst CryptoCalc = () => {\n    return (\n<div>\n        <div className=\"form-control\">\n            <div className=\"input-group\">\n                <input type=\"text\" placeholder=\"type amount\" className=\"input input-bordered\"/>\n            </div>\n        </div>\n</div>\n            );\n            };\n            export default CryptoCalc;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACrB,oBACJ;IAAA,uBACQ;MAAK,SAAS,EAAC,cAAf;MAAA,uBACI;QAAK,SAAS,EAAC,aAAf;QAAA,uBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,WAAW,EAAC,aAA/B;UAA6C,SAAS,EAAC;QAAvD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADR;IAAA;IAAA;IAAA;EAAA,QADI;AASS,CAVb;;KAAMA,U;AAWM,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}